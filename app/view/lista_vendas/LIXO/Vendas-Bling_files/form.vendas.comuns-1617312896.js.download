var datatable;
var listasPrecos = [];
var listasPrecosContatos = [];
function montarDataTable() {
	new BreadCrumb({ data:['Vendas','Pedidos de venda'] });
	datatable = new DataTable({
		valIndex: 'totalVenda',
		debug : false,
		filter: filter,
		contextMenu: getContextMenu,
		checkbox : {
			pipe: function (checkbox) {
				var classe = this;
				$(checkbox).on('change', function() {
					if (classe.selecteds.length > 0) {
						$('.act-enviar-faturas .text-not-selected').hide();
						$('.act-enviar-faturas .text-selected').show();
						return;
					}
					$('.act-enviar-faturas .text-selected').hide();
					$('.act-enviar-faturas .text-not-selected').show();
				});
				return  {
					valor : this.data.totalVenda,
					id: 'marcado' + this.data.id,
					value: this.data.id,
					class: 'tcheck',
				};
			}
		},
		line : {
			onClick : editCloneVenda
		},
		 fields: [
			{
				label: 'Número',
				prop : 'numeroPedido',
				pipe: function (numeroPedido) {
					if (this.data.nroCupom && this.data.nroCupom.trim()) {
						return numeroPedido + '/' + this.data.nroCupom;
					}
					return  numeroPedido;
				}
			},
			{
				label: 'Data',
				pipe: function(data) {
					$dataPrevista = true;
					var dataPrevista = '';
					if (this.data.dataPrevista && this.data.dataPrevista !== '0000-00-00') {
						dataPrevista = ' (prevista até: ' + dataBr(this.data.dataPrevista) + ')';
					}
					return dataBr(data) + dataPrevista;
				}
			},
			{
				label:'Cliente',
				prop: 'nome',
				pipe: function(nome) {
					return nome;
				}
			},
			{
				label: 'Total (R$)',
				pipe: nroBra,
				prop:'totalVenda',
				attributes: {
					class: 'value-column'
				}
			},
			{
				label: 'Situação',
				disableClick : true,
				prop: 'markers',
				pipe : function(icons) {
                    var markers = document.createDocumentFragment();
					markers.appendChild(this.config.pipelines.getCircleColor(this.data.idSituacao));
					if (!this.config.feed.permissions.vendedor) {
						var that = this;
						var span = document.createElement('span');
						span.addEventListener('click', function() {
							var id = that.data.id;
							return function() {
								abrirPopupOcorrencia(id);
							};
						}());
						var icon = document.createElement('span');
						icon.title = 'Visualizar ocorrências';
						icon.className = 'far fa-clock';
						span.appendChild(icon);
						markers.appendChild(span);
					}
					for (var i in icons) {
						if (icons[i] && !icons[i].title && icons[i].alt) {
							icons[i].title = icons[i].alt;
						}
						if (i == 'lojaVirtual') {
							var iconeLoja = document.createElement('img');
							for (var attr in icons[i]) {
								iconeLoja.setAttribute(attr, icons[i][attr]);
							}
							markers.appendChild(iconeLoja);
							if (this.config.feed.permissions.exibirNumeroPedidoLojaVirtual) {
								var p = document.createElement('p');
								p.className =  'hidden-xs';
								p.style.padding = '0px';
								p.style.display = 'inline';
								p.style['margin-right'] = '3px';
								p.innerText = icons[i].numeroPedidoDaLojaVirtual;
								markers.appendChild(p);
							}
							$(iconeLoja).on('show.bs.popover', function(e) {
								$(this).data('bs.popover').tip().addClass('popover-ajuda');
							});
						} else if (icons[i]) {
							var el = datatable.getMarker(i, icons[i].title || '');
							if (icons[i].onclick) {
								var f = new Function(icons[i].onclick);
								el.addEventListener('click', f);
							}
							markers.appendChild(el);
						}
					}
					var estoque = vincularMarcadoresListagem.call(this, undefined, true);
					if (estoque) {
						markers.appendChild(estoque);
					}
					var logisticaObj = vincularLogisticaTracking.call(this);
					if (logisticaObj) {
						markers.appendChild(logisticaObj);
					}
					if (this.data.primeiraCompra) {
						var primeira = document.createElement('span');
						primeira.className = 'new';
						primeira.textContent = '1ª venda';
						markers.appendChild(primeira);
					}
					if (this.data.existeOrdemProducao) {
						var img = document.createElement('img');
						img.src = 'images/ordens_producao.svg';
						img.title ='Ordem de produção';
						img.setAttribute('onclick', 'openModalOrdensProducao(' + this.data.id + ')');
						markers.appendChild(img);
					}
					var marcadores = document.createElement('span');
					marcadores.className = 'marcadores';
					marcadores.appendChild(markers);
					return marcadores;
				}
			},
			{
				permissions : 'PainelFatura',
				disableClick : true,
				pipe : function () {
					var classe = this;
					var input = document.createElement('input');
					input.id = 'btn_faturar' + this.data.id;
					input.type = 'button';
					input.className ='btn-add btn-faturar hover-opacity';
					input.value ='Faturar';
					input.title ='Faturar venda';
					input.addEventListener('click', function() {
						var data = classe.data;
						return function () { faturarPedidoServico(data); };
					}());
					return input;
				}
			}
		]
	});
	closeWait('vendasWait');
}

function getSituacaoPeloId(idSituacao) {
	var infoSituacao = {
		id: '',
		nome: 'Todos',
		valor: ''
	};
	$.each(situacoes, function(index, situacao) {
		if (situacao.id == idSituacao) {
			infoSituacao = {
				id: situacao.id,
				valor: situacao.valor,
				nome: situacao.nome
			};
			return false;
		}
	});
	return infoSituacao;
}

function listarUltimos() {
	$('#filtro-criterio').val('ultimos');
	$('#filtro-criterio').change();
	listar();
}

function verificarItensVendaLoja() {
	if (vendaPossuiItens()) {
		DialogMessage.question({
			'description': 'Você já possui itens na venda. Gostaria de atualizar o preço dos produtos com base na loja selecionada?',
			'fnOk': function() {
				atualizarPrecoProduto();
			}
		});
	}
}

function vendaPossuiItens() {
	return ($('input[name="itens[produto][]"]').eq(0).val() != undefined && $('input[name="itens[produto][]"]').eq(0).val() != '') || $('#produto').val() != '';
}

function recalcularItensListaPreco() {
	if (vendaPossuiItens()) {
		DialogMessage.info({
			'htmlTitle': 'Lista de preços',
			'description': 'A lista de preços foi alterada, os preços dos itens da venda serão recalculados de acordo com a lista selecionada.',
			'fnOk': function() {},
			'hideCancel': true,
			'fnAfterDestroy': function() {
				displayWait('vendasWait', true, 'Calculando, aguarde...');
				atualizarPrecoProduto().done(function() {
					closeWait('vendasWait');
				});
			}
		});
		$("#idListaPreco option[value='-1']").remove();
	}
}

function listarUnidadesDeNegocio(idLoja, idConf, select, todas) {
	var dfd = $.Deferred();
	todas = todas || false;
	select = document.getElementById(select || 'idConfUnidadeNegocio');
	if (select) {
		select.options.length = 0;
		xajax_listarUnidadesDeNegocio(idLoja, function(data) {
			$('#idConfUnidadeNegocio').children(select.options).remove();
			var temDepositoPadrao = false;
	        data.forEach(function(unidade) {
				if (idConf == unidade.value || (idConf == 0 && (unidade.padrao == 1 && !todas))) {
					select.options[select.options.length] = new Option(unidade.text, unidade.value, true, true);
					idPadrao = unidade.value;
					temDepositoPadrao = true;
					setarIdConfUniNeg(unidade.value);
				} else {
					select.options[select.options.length] = new Option(unidade.text, unidade.value);
				}
	        });
			if (!temDepositoPadrao) {
				setarIdConfUniNeg(data[0].value || '0');
			}
			dfd.resolve();
		});
		if (idLoja == 0) {
			setarIdConfUniNeg('0');
		}
		if (todas) {
			select.options[select.options.length] = new Option('Todas', 0, true, true);
		}
	} else {
		dfd.reject();
	}
	return dfd.promise();
}

function visualizarDescricaoDetalhada(idItem) {
	if (idItem < 0 || ($('#produtoId').val() == '' && $('#produtoId' + idItem).val() == '')) {
		return;
	}
	var dialog = {
		htmlTitle: 'Descrição detalhada',
		width: 440,
		content: $('<div>').append(
			$('<form>',  { id:'formEnvioDocumento2', name:'formEnvioDocumento2', style:'text-align:left;', onsubmit:'return false' }).append(
				$('<input>', { type:'hidden', name:'descricaoIdItem', id:'descricaoIdItem', value:'' }),
				$('<textarea>', { class:'item-form textarea-item-form resize-none', id:'descricaoItem', name:'descricaoItem', cols:'70', rows:'6', style:'width: 413px;' })
			)
		),
		textOk: 'Enviar',
		hideCancel: true,
		fnCreate: function() {
			$('#descricaoItem').val($('#descricaoDetalhada' + idItem).val());
			$('#descricaoIdItem').val(idItem);
			$('#descricaoItem').focus();
		},
		fnOk: function() {
			$('#descricaoDetalhada' + idItem).val($('#descricaoItem').val());
			var descricaoDetalhada = $('#descricaoItem').val();
			if (descricaoDetalhada.trim() != '') {
				$('#descricao_detalhada_produto' + idItem).first().children().removeClass('icon-file')
																			.addClass('icon-file-text');
			} else {
				$('#descricao_detalhada_produto' + idItem).first().children().removeClass('icon-file-text')
																			 .addClass('icon-file');
			}
			popoverDescricaoDetalhada(idItem, descricaoDetalhada);
		}
	};
	createDialog(dialog);
}

function carregarSituacoes() {
	var deferred = $.Deferred();
	xajax_carregarSituacoes(function(data) {
		situacoes = data;
		$('#filtro-criterio').trigger('change');
		situacoes.forEach(function(situacao) {
			$('#filtro-situacoes').append(
				function() {
					var attr = {'id': 'sit-' + situacao.valor, 'text': situacao.nome, 'value': situacao.id};
					if (situacao.nome == 'Em aberto') {
						attr.selected = 'selected';
					}
					return $('<option>', attr);
				}()
			);
		});
		listar();
		deferred.resolve();
	});
	return deferred.promise();
}

function setIdMunicipioEtiqueta(param) {
	$('#etiqueta_municipio').parent().removeClass('form-warning').removeClass('form-error');
	$('#etiqueta_municipio').addClass('tipsyOff')
							.removeAttr('title');
	$('#etiqueta_id_municipio').val(param.id);
	$('#etiqueta_uf').val(param.uf);
}

function ajustarFormEtiqueta(){
	if ($('#etiqueta_mostrar').prop('checked')) {
		$('#dados_endereco_etiqueta').show();
	} else {
		$('#dados_endereco_etiqueta').hide();
	}
}

function setarCategoria($id){
	$('#pag_categoria').val($id);
	$('#categoria').treeSelect('setSelected', [$id || 0]);
}

function verComissoes(tipo, link) {
	$('.bling-tabs > li > a').removeClass('active');
	link.addClass('active');
	if (tipo == 'Ver Comissões') {
		$('.item').hide();
		$('.comissao').show();
	} else {
		$('.item').show();
		$('.comissao').hide();
	}
}

function comissaoGetComissao(sDesconto, idLinhaProduto) {
	sDesconto = parseFloat(nroUsa(sDesconto));
	return comissaoGetAliquotaComissaoPorAlqDesconto(sDesconto, idLinhaProduto);
}

function comissaoCalcularComissao(aItem, obterAlq) {
	if (obterAlq) {
		alqComissao = comissaoGetComissao($('#descontoItem' + aItem).val(), $('#idLinhaProduto' + aItem).val());
		$('#alq_comissao' + aItem).val(nroBra(alqComissao.toString()));
	} else {
		alqComissao = parseFloat(nroUsa($('#alq_comissao' + aItem).val()));
	}
	$('#vlr_comissao' + aItem).val(nroBra(((parseFloat(nroUsa($('#base_comissao' + aItem).val())) + parseFloat(nroUsa($('#adicionais_base' + aItem).val()))) * alqComissao / 100).toString()));
	atualizarTotalComissao();
}

function comissaoCalcularComissoes() {
	closeWait('vendasWait');
	$('.niComissao').each(function() {
		var alqComissao = comissaoGetAliquotaComissaoPorAlqDesconto(parseFloat(nroUsa($('#descontoItem' + $(this).val()).val())), $('#idLinhaProduto' + $(this).val()).val());
		$('#alq_comissao' + $(this).val()).val(nroBra(alqComissao.toString()));
		$('#vlr_comissao' + $(this).val()).val(nroBra(((parseFloat(nroUsa($('#base_comissao' + $(this).val()).val())) + parseFloat(nroUsa($('#adicionais_base' + $(this).val()).val()))) * alqComissao / 100).toString()));
	});
}

function setIdVendedorjQuery(param) {
	$('#idVendedor').val(param.id);
	$('#nomeVendedor').parent().removeClass('form-warning')
					  .removeClass('form-error')
					  .addClass('tipsyOff')
					  .removeAttr('title')
					  .focus();
	displayWait('vendasWait', true, 'Carregando dados do vendedor...');
	comissaoSetIdVendedor($('#idVendedor').val(), true);
}

function displaySearch() {
	habilitarCampos();
	window.scrollTo(0, 0);
	$('#edicao').addClass('invisivel');
	$('#lista, .new-box-side').removeClass('invisivel');
}

function displayForm() {
	window.scrollTo(0, 0);
	$('#edicao').removeClass('invisivel');
	$('#lista, .new-box-side').addClass('invisivel');
}

function imprimirEtiquetaVenda(id) {
	var frame = document.getElementById('framePrint');
	frame.src = 'etiquetas/etiquetas.php?id=' + id + '&program=etiquetaVenda.php&landscape=1&size=9';
	frame.width = 0;
	frame.height = 0;
}

function direcionarImpressaoVenda(params, callbackOk) {
	var checkboxOrdemProducao = '';
	var selectTipoImpressao = '';
	var desmenbrarEstruturaVenda = '';

	if (params.ordemProducao) {
		checkboxOrdemProducao = $('<div>', {'class': 'row'}).append(
			$('<div>', {'class': 'col-xs-12'}).append(
				$('<div>', {'class': 'item-form-toggle'}).append(
					$('<label>', {'class': 'label-item-form-toggle', 'text': 'Ocultar itens produzidos por terceiros', 'for': 'ocultar_terceiros'}),
					$('<input>', {'type': 'checkbox', 'id': 'ocultar_terceiros', 'name': 'ocultar_terceiros'})
				)
			)
		);
	} else if (params.detalhado == 'N' || params.vendasSelecionadas) {
		desmenbrarEstruturaVenda = $('<div>', {'id': 'div_desmembrar_produtos', 'class': 'row'}).append(
			$('<div>', {'class': 'col-xs-12 linha_form wh100 group-item-form'}).append(
				$('<div>', {'class': 'item-form-toggle'}).append(
					$('<label>', {'class': 'label-item-form-toggle', 'text': 'Desmembrar produtos da estrutura', 'for': 'desmembrarEstruturaVenda'}),
					$('<input>', {'type': 'checkbox', 'id': 'desmembrarEstruturaVenda', 'name': 'desmembrarEstruturaVenda'})
				)
			)
		);
	}

	if (params.vendasSelecionadas) {
		selectTipoImpressao = $('<div>', {'class': 'row'}).append(
			$('<div>', {'class': 'col-xs-12 linha_form'}).append(
				$('<div>', {'class': 'group-item-form'}).append(
					$('<label>', {'class': 'label-item-form wh100', 'text': 'Tipo de impressão', 'for': 'tipoImpressao'}),
					$('<select>', {'id': 'tipoImpressao', 'name': 'tipoImpressao', 'class': 'item-form wh100'}).append(
						$('<option>', {'value': 'N', 'text': 'Normal'}),
						$('<option>', {'value': 'S', 'text': 'Detalhada'})
					)
				)
			)
		);
	}

	createDialog({
		'content': $('<div>', {'class': 'container-fluid'}).append(
			$('<div>', {'class': 'row', 'style': 'overflow: hidden;'}).append(
				$('<div>', {'class': 'col-xs-12 linha_form'}).append(
					$('<div>', {'class': 'group-item-form'}).append(
						$('<label>', {'class': 'label-item-form wh100', 'text': 'Selecione a ordem de impressão dos itens', 'for': 'options_print_receipt'}),
						$('<select>', {'id': 'options_print_receipt', 'class': 'item-form wh100'}).append(
							$('<option>', {'text': 'Inserção', 'id': 'ordem_insercao', 'value': 'I'}),
							$('<option>', {'text': 'Alfabética', 'id': 'ordem_alfabetica', 'value': 'A'}),
							$('<option>', {'text': 'Localização', 'id': 'ordem_localizacao', 'value': 'L'}),
							$('<option>', {'text': 'Código', 'id': 'ordem_codigo', 'value': 'C'})
						).val($('#padraoOrdemImpressaoItens').val())
					)
				)
			),
			selectTipoImpressao,
			desmenbrarEstruturaVenda,
			checkboxOrdemProducao
		),
		'htmlTitle': 'Opções de impressão',
		'width': 440,
		'fnCreate': function() {
			$('#tipoImpressao').on('change', function() {
				if ($(this).val() == 'S') {
					$('#div_desmembrar_produtos').hide();
				} else {
					$('#div_desmembrar_produtos').show();
				}
			});

			if (params.hasOwnProperty('desmembrar')) {
				$('#desmembrarEstruturaVenda').prop('checked', params['desmembrar']);
			}
		},
		'fnOk': function() {
			if (params.vendasSelecionadas) {
				$('#imprimeDetalhado').val($('#tipoImpressao option:selected').val());
			}

			if (callbackOk) {
				callbackOk();
			}
		}
	});
}

function closeMessageDocComp(){
	dialog.dialog('close');
}

function ajustarFormEnvioDoc() {
	var idDoc = $('#idDocEnvioDoc').val();
	var idContato = $('#idContatoEnvioDoc').val();
	var tipo = $('#tipoEnvioDoc').val();
	displayWait('pleasewait');
	xajax_obterDadosDoDestinatario(idDoc, idContato, tipo);
	$('#nomeDestinatario').focus();
}

function abrirPopupEnvioDocumento(idVenda, idContato) {
	dialog.dialog({
		autoOpen: false,
		title: 'Envio de documento por email',
		modal: true,
		resizable: false,
		close:function(){
			$(this).dialog('destroy');
		},
		width: 425
	});
	dialog.load('templates/form.envio.documento.popup.php?idDoc=' + idVenda + '&idContato=' + idContato + '&tipo=venda', '', function() {
		dialog.dialog('open');
		ajustarFormEnvioDoc();
	});
}

function setObservacoes(obs) {
	observacoes = obs;
}

function setarTipoUsuario(vendedor) {
	if (vendedor) {
		$('.act-excluir').parent().remove();
		$('#idVendedor').parent().hide();
		return;
	}
	$('.act-excluir').parent().show();
	$('#idVendedor').parent().show();
}

function adicionarAtalhos() {
	shortcutsKeys = {keydown: {}};
	shortcutsKeys.keydown[shortcuts.getFnKeyByOS('z')] = {
		description: 'Adicionar outro item',
		elementSelector: '#aNovaLinhaItem',
		handler: function() {
			validarAdicionarItem();
		}
	};
	shortcuts.renderShortcuts(shortcutsKeys);
	shortcuts.create(shortcutsKeys);
}

function validarAdicionarItem() {
	if (permiteAdicaoItemCallback.length == 5 && !$('#pleasewait > div').length) {
		adicionarLinhaItem();
	}
}

function obterVendaPorOrcamento(id) {
	$.when(
		carregarListasPrecos()
	).then(function() {
		xajax_obterVendaPorOrcamentoOld(id, function(res) {
			var contatoDados = res.contato.dadosContato;
			xajax_setarPrimeiraCompra('$idContato', '0');
			$('#possuiNumeroProposta').show();
			$('#id').val('0');
			$('#idContato').val(res.orcamento.idContato);
			$('#prazoEntrega').val(res.prazoEntrega || '');
			montarListaLojasIntegradas(res.dadosLojas);
			if (res.orcamento.loja) {
				$('#loja').val(res.orcamento.loja);
				if (res.orcamento.idConfUnidadeNegocio) {
					listarUnidadesDeNegocioEstoque(res.orcamento.loja, res.orcamento.idConfUnidadeNegocio);
				}
			}

			// contato
			contato.exibir(contatoDados, true);
			$('#pag_condicao').val(contatoDados.condicao);
			if (res.contato.acrescimoDesconto) {
				setarAcrescimoDesconto(res.contato.acrescimoDesconto);
			}

			$('#historico i').css('color', res.contato.color);
			$('#condicao').val(res.orcamento.condicao);
			$('#idOrigem').val(res.idOrigem);
			$('#nroProposta').val(res.orcamento.numeroProposta);
			$('#prazoEntega').val(parseInt(res.orcamento.prazo_entrega));
			$('#parametro_adicionais_comissao').val(res.parametro_adicionais_comissao);
			$('#dataPrevista').val(res.dataPrevista);
			$('#dataSaida').val(res.dataSaida);
			if (res.exibirIPI && res.exibirIPI != 'N') {
				$('#totalICMS').val(nroBra(res.orcamento.totalICMS));
				$('#totalIPI').val(nroBra(res.orcamento.totalIPI));
			}
			$('#desconto').val(res.orcamento.desconto);
			$('#frete').val(nroBra(res.orcamento.frete));
			$('#fretePorConta').val(res.orcamento.frete_modalidade);
			$('#observacaoInterna').val(res.orcamento.observacaoInterna);
			$('#qtdVolumes').val(res.orcamento.qtdVolumes);
			$('#idTransportador').val(res.orcamento.idTransportador);
			$('#transportador').val(res.orcamento.transportador);
			$('#pesoBruto').val(nroBraDecimais(res.orcamento.pesoBruto, 3));
			$('#outrasDespesas').val(res.outrasDespesas);
			$('#observacoes').val(res.observacoes);
			$('#numeroPedido').val(res.numeroPedido);
			mostrarEtiquetasCarregadas(res.dadosEtiquetas);
			addDetails(res.itens);
			setArrayEstruturaDeTodosProdutos(res.arrayTodosComponentes);
			$('#itemNumber').val(res.itens.length);
			totalVenda(false);

			$('#pag_categoria').val(res.idCategoria);
			$('#categoria').treeSelect('setSelected', [res.idCategoria]);

			addDetailsParcelas(res.parcelas);
			if (res.dias) {
				$('#pag_condicao').val(res.dias);
			}
			if (res.nomeVendedor && res.orcamento.idVendedor) {
				$('#nomeVendedor').val(res.nomeVendedor);
				$('#idVendedor').val(res.orcamento.idVendedor);
				comissaoSetIdVendedor(res.orcamento.idVendedor, true);
			}

			if (res.contato.listas.listasContato.length) {
				$.when(
					adicionarListasPrecos(res.contato.listas)
				).then(function() {
					if (res.orcamento.idListaPreco > 0) {
						setListaPreco(res.orcamento.idListaPreco);
					}
				});
			} else if (res.orcamento.idListaPreco > 0) {
				setListaPreco(res.orcamento.idListaPreco);
			}
		});
	});
}

function carregarLojasIntegradas() {
	var def = $.Deferred();
	xajax_carregarLojasIntegradasArray(function (res) {
		montarListaLojasIntegradas(res);
		def.resolve(res);
	});
	return def.promise();
}

function montarListaLojasIntegradas(data) {
	$('#loja').attr('disabled', false);
	var lojasContainer = $('#loja');
	lojasContainer.empty();
	var options = [];
	for (var i = 0; i < data.lojas.length; i++) {
		var loja = data.lojas[i];
		options.push(
			$('<option>', {id: loja.id, value: loja.id, text: loja.nomeLoja})
		);
	}
	lojasContainer.append(
		$('<option>', {id: '0', value: '0', text: 'Todas as lojas'}),
		options
	);
	if (data.vendedor && data.idLojaVendedor) {
		lojasContainer.val(data.idLojaVendedor);
		$('#loja').attr('disabled','disabled');
	}
}

function carregarListasPrecos() {
	var def = $.Deferred();
	xajax_obterListasPrecos(function(res) {
		montarListasPrecos(res);
		def.resolve();
	});
	return def.promise();
}

function editCloneVenda(id, copy) {
	listasPrecos = [];
	listasPrecosContatos = [];
	if (copy == 'N' || copy == undefined) {
		$.history.add('edit/'+id);
	} else {
		$.history.add('add');
	}
	displayWait('vendasWait', true, 'Obtendo dados da venda, aguarde...');
	$.when(
		carregarLojasIntegradas(),
		carregarListasPrecos()
	).then(function() {
		clearForm();
		displayForm();
		xajax_obterVendaOld(id, copy, function(res){
			if (res.notFound) {
				$('#mensagem').addClass('error');
				$('#mensagem').html('Erro - Venda não encontrada');
			} else {
				if (res.possuiNumeroProposta) {
					$('#possuiNumeroProposta').show();
					$('#nroProposta').val(res.possuiNumeroProposta);
				}

				$.each(res.venda, function(key, value) {
					if (key == 'idCategoria') {
						$('#pag_categoria').val(res.venda['idCategoria']);
						$('#categoria').treeSelect('setSelected', [res.venda['idCategoria']]);
					}

					if (key == 'loja' && res.idLojaInativa) {
						setLojaInativaVenda(res.idLojaInativa, res.nomeLojaInativa);
					}

					$('#'+key).val(value);
				});

				if (res.etiquetas) {
					$('#etiqueta_mostrar').prop('checked', true);
					ajustarFormEtiqueta();
				} else {
					$('#etiqueta_mostrar').prop('checked', false);
				}

				mostrarEtiquetasCarregadas(res.dadosEtiquetas);

				$('#idVendedor').val(res['idVendedor']);
				$('#nomeVendedor').val(res['nomeVendedor']);
				if (res['idVendedor']) {
					comissaoSetIdVendedor(res['idVendedor'], res['comissaoSetIdVendedor']);
				}

				if (res['setarIdConfUniNeg']) {
					setarIdConfUniNeg(res['setarIdConfUniNeg']);
				}
				setExisteEstoqueInfo(res.setExisteEstoqueInfo);
				setPodeAlterarLojaAviso(res.setPodeAlterarLojaAviso);

				$('#parametro_adicionais_comissao').val(res.adicionaisComissao);

				if (copy != 'S' && res['existeEstoque']) {
					setarEstoqueLancado();
					setExisteEstoqueInfo(1);
				}

				addDetails(res.jsonItens, copy);
				setArrayEstruturaDeTodosProdutos(res.arrayTodosComponentes);
				addDetailsParcelas(res.jsonParcelas, null, (copy && copy =='S'));
				totalGeral();
				$('#pag_condicao').val(res.pag_condicao);

				if (res.possuiIntegracaoLojaVirtual) {
					$('#numeroPedidoDaLojaVirtual').val(res.numeroPedidoDaLojaVirtual);
					$('#origemPedidoDaLojaVirtual').val(res.origemPedidoDaLojaVirtual);
					$('#origemPedidoCanalDeVenda').val(res.origemPedidoCanalDeVenda);
					$('#possuiIntegracaoLojaVirtual').show();
				} else {
					$('#possuiIntegracaoLojaVirtual').hide();
				}

				if (res.desabilitarCampos) {
					desabilitarCampos();
				} else {
					habilitaBotaoSalvar();
				}

				$('mensagem').addClass('nomessage');
				$('mensagem').html('');
				$('#primeiraCompra').val(res.venda.primeiraCompra || '');

				if (res.venda.clone) {
					$('#clone').val(res.venda.clone);
				}

				if (copy == 'S') {
					if (res.dadosUsuario['vendedor']) {
						limparServicoEtiqueta();
					}
					$('#id').val(0);
					$('#clone').val(id);
					$('#idEnderecoEtiqueta').val(0);
					$('#primeiraCompra').val('');
					$('#codigoCorreios').parent().remove()
					$('#id').val(0);
					$('#numeroPedidoDaLojaVirtual').val('');

					if (res.infoCloneVenda) {
						infoCloneVenda(res.infoCloneVenda);
					}

					if (res.contato.dadosContato['condicao']) {
						$('#pag_condicao').val(res.contato.dadosContato['condicao']);
					}
				} else {
					$('#detVenda').html(res.detalhes);

					if (res.dadosUsuario['vendedor']) {
						$('#podeVisualizarEstoqueNaVenda').val(res['dadosUsuario']['podeVisualizarEstoqueNaVenda']);
					}
				}
				if (res.avisosVenda) {
					mostraAvisoVenda(JSON.parse(res.avisosVenda));
				}

				if (res.ocultarFramePagamento) {
					$('#frame_pagamento').hide();
					$('#msg_config_gateway').show();
				}

				$('#idOrigem').val(res.idOrigem);
				atualizarCodigoCorreios();
				closeWait('vendasWait');
				listarUnidadesDeNegocioEstoque(res.venda['loja'], res.venda['idConfUnidadeNegocio'], 1);
				mostraOcultaPais();
				contato.exibir(res.contato.dadosContato, 1);

				if (res.contato['acrescimoDesconto']) {
					setarAcrescimoDesconto(res.contato['acrescimoDesconto']);
				}

				$('#historico i').css('color', res.contato['color']);
				$('#itemNumber').val(res['linhaItem']);
				if (res.contato.listas.listasContato.length) {
					$.when(
						adicionarListasPrecos(res.contato.listas)
					).then(function() {
						if (res.venda.idListaPreco > 0) {
							setListaPreco(res.venda.idListaPreco);
						}
					});
				} else if (res.venda.idListaPreco > 0) {
					setListaPreco(res.venda.idListaPreco);
				}
				if (res.dadosEtiquetas.volumes) {
					alteraBotaoCotacaoProduto(res.dadosEtiquetas.volumes);
				}

				$('#cnpjIntermed').val(res.intermediador.cnpjIntermed).trigger('input');
				$('#idCadIntTran').val(res.intermediador.idCadIntTran);
			}
		});
	});
	$('#itens').hide();
	$('#trh').hide();
	$('#nome').focus();
}

function mostrarEtiquetasCarregadas(dadosEtiquetas) {
	mostrarLogisticas(dadosEtiquetas.logisticas);
	mostrarServicosLogisticas(dadosEtiquetas.servicosLogisticas);
	mostrarVolumes(dadosEtiquetas.volumes, dadosEtiquetas.copy);
}

function setPodeAlterarLojaAviso(podeAlterar) {
	podeAlterarLojaAviso = podeAlterar;
}

function setLojaInativaVenda($idLoja, $nomeLoja) {
	$('#loja').append(
		$('<option>', {'value': $idLoja, 'disabled': 'disabled', 'selected': 'selected'}).text($nomeLoja + ' (Desabilitada)')
	);
}

function mostraOcultaPais() {
	if ($('#etiqueta_uf').val() == 'EX') {
		$('#div_pais').show();
	}
}

function mostraAvisoVenda(obj) {
	var htmlAviso = '';
	var titulo = '';
	//If para os registros antigos que retornavam HTML no json
	if (obj != null) {
		if (obj.hasOwnProperty('contato') || obj.hasOwnProperty('produto') || obj.hasOwnProperty('contatoEtiqueta')) {
			htmlAviso += (obj.contato != undefined ? obj.contato : '')  + (obj.produto != undefined ? obj.produto : '') + (obj.contatoEtiqueta != undefined ? obj.contatoEtiqueta : '');
		} else {
			if (obj.clienteContato != undefined || obj.produtos != undefined || obj.etiquetas != undefined) {
				titulo += 'Este pedido possui pendencias cadastrais para emissão de nota fiscal';
			}
			if (obj.hasOwnProperty('amazon')) {
				htmlAviso += '<p>AMAZON</p>';
				htmlAviso += '<ul>'+obj.amazon.avisoEndereco+'</ul>';
			}

			if (obj.hasOwnProperty('limitesDesconto') || obj.hasOwnProperty('produtoNaoCadastrado')) {
				if (obj.limitesDesconto != undefined || obj.produtoNaoCadastrado) {
					titulo += titulo != '' ? ' e avisos.' : 'Este pedido possui avisos.';
				}

				if (obj.limitesDesconto != undefined) {
					htmlAviso += montaAvisoLimiteDesconto(obj.limitesDesconto);
				}

				if (obj.produtoNaoCadastrado != undefined){
					htmlAviso += montaAvisoProdutoNaoCadastrado(obj.produtoNaoCadastrado);
				}
			}
			if (obj.hasOwnProperty('clienteContato')) {
				htmlAviso += montaAvisoContato(obj.clienteContato);
			}
			if (obj.hasOwnProperty('produtos')) {
				htmlAviso += montaAvisoProduto(obj.produtos);
			}
			if (obj.hasOwnProperty('etiquetas')) {
				htmlAviso += montaAvisoEtiqueta(obj.etiquetas);
			}
			if(obj.hasOwnProperty('fraudeML')){
				htmlAviso += montaAvisoFraudML();
			}
			if (obj.hasOwnProperty('mensagem')) {
				htmlAviso += '<p>Mensagem</p><ul>' + obj.mensagem + '</ul>';
			}
			if (htmlAviso.trim() != '') {
				$('#avisoMensagem').show();
				$('#tituloAvisos').html(titulo);
				$('#avisos').html(htmlAviso);
			} else {
				$('#avisoMensagem').hide();
			}
		}
	}
}

function montaAvisoLimiteDesconto(objLimitesDesconto) {
	var htmlAviso = '';
	$.each(objLimitesDesconto, function(key, val) {
		htmlAviso += '<li>' + val.mensagem + '</li>';
	});
	if (htmlAviso.trim() != '') {
		htmlAviso = '<h3>Limite de desconto do vendedor</h3><ul>' + htmlAviso + '</ul>';
	}
	return htmlAviso;
}

function montaAvisoProdutoNaoCadastrado(objProdutoNaoCadastrado) {
	var htmlAviso = '';
	$.each(objProdutoNaoCadastrado, function(key, val) {
		htmlAviso += '<li>' + val.produtoDesc + '</li>';
	});
	if (htmlAviso.trim() != '') {
		htmlAviso = '<p>Produto(s) não cadastrado(s) no sistema </p><ul>' + htmlAviso + '</ul>';
	}
	return htmlAviso;
}

function montaAvisoContato(objContato) {
	var htmlAviso = '';
	if (objContato.cnpj) {
		htmlAviso += '<li>O campo CPF/CNPJ é obrigatório</li>';
	}

	if (objContato.cnpjDuplicado) {
		htmlAviso += '<li>Exitem 2 ou mais contatos com o mesmo CPF/CNPJ, verifique se a venda foi vinculada ao contato correto</li>';
	}

	if (objContato.nome) {
		htmlAviso += '<li>O campo Nome é obrigatório</li>';
	}
	if (objContato.email) {
		htmlAviso += '<li>O campo E-mail é obrigatório</li>';
	}
	if (objContato.endereco) {
		htmlAviso += '<li>O campo Endereço é obrigatório</li>';
	}
	if (objContato.enderecoNro) {
		htmlAviso += '<li>O campo Número é obrigatório</li>';
	}
	if (objContato.bairro) {
		htmlAviso += '<li>O campo Bairro é obrigatório</li>';
	}
	if (objContato.cep) {
		htmlAviso += '<li>O campo CEP é obrigatório</li>';
	}
	if (objContato.cidade) {
		htmlAviso += '<li>O campo Cidade é obrigatório</li>';
	}
	if (objContato.uf) {
		htmlAviso += '<li>O campo UF é obrigatório</li>';
	}
	if (objContato.fone) {
		htmlAviso += '<li>O campo Fone é obrigatório</li>';
	}
	if (objContato.mudouNomePj) {
		htmlAviso += '<li>A razão social desse cliente foi alterada nessa venda.</li>';
	}
	if (objContato.mudouNomePf) {
		htmlAviso += '<li>O nome desse cliente foi alterado nessa venda.</li>';
	}
	if( htmlAviso.trim() != '') {
		$('#contato').parent().addClass('form-warning');
		htmlAviso = '<p>Cliente</p><ul>' + htmlAviso + '</ul>';
	}
	return htmlAviso;
}

function montaAvisoProduto(objProdutos) {
	var htmlAviso = '';
	if (typeof objProdutos != 'object') {
		return htmlAviso;
	}
	$.each(objProdutos, function(key, val) {
		var htmlAvisoProduto = '';
		if (val.produto == true) {
			$('#produto' + val.indice).addClass('warning');
			$('#produto' + val.indice).removeClass('tipsyOff');
			htmlAvisoProduto += '<li>O campo Descrição é obrigatório</li>';
		} else {
			$('#produto' + val.indice).removeClass('warning');
			$('#produto' + val.indice).addClass('tipsyOff');
		}
		if (val.quantidade == true) {
			$('#quantidade' + val.indice).addClass('warning');
			$('#quantidade' + val.indice).removeClass('tipsyOff');
			htmlAvisoProduto += '<li>O campo Quantidade é obrigatório</li>';
		} else {
			$('#quantidade' + val.indice).removeClass('warning');
			$('#quantidade' + val.indice).addClass('tipsyOff');
		}
		if (val.precounitario == true) {
			$('#precounitario' + val.indice).addClass('warning');
			$('#precounitario' + val.indice).removeClass('tipsyOff');
			htmlAvisoProduto += '<li>O campo Preço Unitário é obrigatório</li>';
		} else {
			$('#precounitario' + val.indice).removeClass('warning');
			$('#precounitario' + val.indice).addClass('tipsyOff');
		}
		if (val.un == true) {
			$('#un' + val.indice).addClass('warning');
			$('#un' + val.indice).removeClass('tipsyOff');
			htmlAvisoProduto += '<li>O campo Unidade é obrigatório</li>';
		} else {
			$('#un' + val.indice).removeClass('warning');
			$('#un' + val.indice).addClass('tipsyOff');
		}
		if (htmlAvisoProduto.trim() != '') {
			htmlAviso += '<ul><li>' + val.produtoDesc + '<ul>' + htmlAvisoProduto + '</ul></li></ul>';
		}
	});
	if (htmlAviso.trim() != '') {
		htmlAviso = '<p>Item(s)</p>' + htmlAviso;
	}
	return htmlAviso;
}

function montaAvisoEtiqueta(objEtiquetas) {
	var htmlAviso = '';
	if (objEtiquetas.nome == true) {
		$('#etiqueta_nome').parent().addClass('form-warning');
		$('#etiqueta_nome').removeClass('tipsyOff');
		htmlAviso += '<li>O campo Nome é obrigatório</li>';
	} else {
		$('#etiqueta_nome').parent().removeClass('form-warning');
		$('#etiqueta_nome').addClass('tipsyOff');
	}
	if (objEtiquetas.endereco == true) {
		$('#etiqueta_endereco').parent().addClass('form-warning');
		$('#etiqueta_endereco').removeClass('tipsyOff');
		htmlAviso += '<li>O campo Endereço é obrigatório</li>';
	} else {
		$('#etiqueta_endereco').parent().removeClass('form-warning');
		$('#etiqueta_endereco').addClass('tipsyOff');
	}
	if (objEtiquetas.numero == true) {
		$('#etiqueta_numero').parent().addClass('form-warning');
		$('#etiqueta_numero').removeClass('tipsyOff');
		htmlAviso += '<li>O campo Número é obrigatório</li>';
	} else {
		$('#etiqueta_numero').parent().removeClass('form-warning');
		$('#etiqueta_numero').addClass('tipsyOff');
	}
	if (objEtiquetas.cep == true) {
		$('#etiqueta_cep').parent().addClass('form-warning');
		$('#etiqueta_cep').removeClass('tipsyOff');
		htmlAviso += '<li>O campo CEP é obrigatório</li>';
	} else {
		$('#etiqueta_cep').parent().removeClass('form-warning');
		$('#etiqueta_cep').addClass('tipsyOff');
	}
	if (objEtiquetas.municipio == true) {
		$('#etiqueta_municipio').parent().addClass('form-warning');
		$('#etiqueta_municipio').removeClass('tipsyOff');
		htmlAviso += '<li>O campo Município é obrigatório</li>';
	} else {
		$('#etiqueta_municipio').parent().removeClass('form-warning');
		$('#etiqueta_municipio').addClass('tipsyOff');
	}
	if (objEtiquetas.bairro == true) {
		$('#etiqueta_bairro').parent().addClass('form-warning');
		$('#etiqueta_bairro').removeClass('tipsyOff');
		htmlAviso += '<li>O campo Bairro é obrigatório</li>';
	} else {
		$('#etiqueta_bairro').parent().removeClass('form-warning');
		$('#etiqueta_bairro').addClass('tipsyOff');
	}
	if (objEtiquetas.uf == true) {
		$('#etiqueta_uf').parent().addClass('form-warning');
		$('#etiqueta_uf').removeClass('tipsyOff');
		htmlAviso += '<li>O campo UF é obrigatório</li>';
	} else {
		$('#etiqueta_uf').parent().removeClass('form-warning');
		$('#etiqueta_uf').addClass('tipsyOff');
	}
	if (htmlAviso.trim() != '') {
		htmlAviso = '<p>Endereço de Entrega</p><ul>' + htmlAviso + '</ul>';
	}
	return htmlAviso;
}

function montaAvisoFraudML() {
	let htmlAviso = '<p><b>Mercado Livre Informa:</b></p>';
	htmlAviso += '<ul>' +
		'<li>Este pedido possui um aviso sobre suspeita de fraude. Por favor, acesse o pedido no painel do Mercado Livre.</li>' +
		'<li>Para maiores informações e para entender como proceder nestes casos, <a href="https://ajuda.bling.com.br/hc/pt-br/articles/1500002756281" target="_blank">clique aqui</a> e acesse o manual.</li>' +
	'</ul>';
	return htmlAviso;
}

function listarUnidadesDeNegocioEstoque(idLoja, idConf, evitaAtualizaEstoqueInfo) {
	$.when(listarUnidadesDeNegocio(idLoja, idConf)).done(function() {
		if (!evitaAtualizaEstoqueInfo) {
			$('#vendaForm #idConfUnidadeNegocio').change();
		}
	}).fail(function() {
		closeWait('vendasWait');
	});
}

function habilitaBotaoSalvar() {
	$('#botaoSalvar').show();
}

function cancelarVenda(isVendedor) {
	$.history.add('list');
	displaySearch();
	clearForm();
	if (isVendedor) {
		carregarLojasIntegradas()
	}
}

function infoCloneVenda(produtos) {
	var avisos = $('<div>').append($('<ul>'));
	$.each(produtos, function(i, aviso) {
		avisos .find('ul').append(
			$('<li>', {'text': aviso})
		);
	});

	DialogMessage.info({
		'description': 'Os itens listados abaixo não foram inseridos na venda por estarem excluídos ou inativos.',
		'content': avisos
	});
}

function gerarSat(idVenda) {
	displayWait('vendasWait', true, 'Enviando...')
	enviarSat(idVenda, 'callback', function(data) {
		if (data.error != '') {
			DialogMessage.error({
				'htmlTitle': 'Erro ao gerar SAT',
				'content': $('<p>').append(
					$('<strong>', {'text': 'Motivo: '}),
					$('<span>', {'text': data.error || 'Erro desconhecido, por favor entre em contato com o suporte.'})
				)
			});
		} else if (data.codigoDeRetorno == 6000) {
			if (data.response && data.response.info) {
				DialogMessage.info({
					'htmlTitle': 'Gerar SAT',
					'content': $('<p>').append(
						$('<strong>', {'text': 'Enviado: '}),
						$('<span>', {'text': data.response.info})
					)
				});
			} else {
				DialogMessage.success({
					'htmlTitle': 'Gerar SAT',
					'content': $('<p>').append(
						$('<strong>', {'text': 'SAT gerado com sucesso!'})
					)
				});
			}
		}
		closeWait('vendasWait');
		listar();
	});
}

function atualizarPrecoProduto() {
	var def = $.Deferred()
	var ids = obterIdProdutosItens();

	var idListaPreco = $('#idListaPreco').val();
	xajax_buscarPrecoLojaProduto(ids, $('#loja option:selected').val(), acrescimoDesconto, idListaPreco, function(res) {
		$.each(ids, function(i, elem) {
			if (elem != undefined && res[elem]) {
				var preco = nroBraDecimais(res[elem].preco, $('#dec_valor').val());
				$('#precoLista' + i).val(preco);
				$('#precounitario' + i).val(preco);
				$('#quantidade' + i).focus().select();
			}
		});
		$('#loja').focus();
		triggerRecalcularDescontosItens();
		def.resolve();
	});
	return def.promise();
}

function triggerRecalcularDescontosItens() {
	$('[name="itens[descontoItem][]"]').trigger('blur')
}

function salvarVenda(id, vendaForm, auxEstruturaDosProdutos, statusPedido, volumesLogistica) {
	var quoteByProduct = $('#tipoCotacaoFrete').val() == 'P' ? 1 : 0
	xajax_salvarVenda(id, vendaForm, auxEstruturaDosProdutos, statusPedido, volumesLogistica, quoteByProduct, function(res) {
		if (res.permissao) {
			closeWait('pleasewait');
			permissaoErro(res.permissao);
		} else if (res.vendaParcial) {
			autoClose();
			$.history.add('list');
			displaySearch();
			clearForm();
			listar();
			closeWait('pleasewait');
		} else if (res.errors && res.errors.length) {
			errorOccuredOnSave = true;
			loadError(res.errors);
			closeWait('pleasewait');
		} else {
			$('message').val('ok');
			autoClose();
			$.history.add('list');
			displaySearch();
			clearForm();
			listar();
			closeWait('pleasewait');

			if (res.numeroAlterado) {
				alert(res.numeroAlterado);
			}

			if (res.erroGeracaoTracking) {
				erroGeracaoTracking(res.erroGeracaoTracking);
			}
			if (res.mostrarMensagemDescontoExcedido) {
				mostrarMensagemDescontoExcedido();
			}
			if (res.warnings != '') {
				mostrarAvisos(res.warnings, 'info', 'Pedido de venda salvo');
			}

			if (Math.random() < 0.02) {
				if (errorOccuredOnSave) {
					gaSendMessage('Pedidos de Venda - Erro');
				} else {
					gaSendMessage('Pedidos de Venda - Sucesso');
				}
			}
		}
		$('#botaoSalvar').prop('disabled', false);
		$("#botaoFinalizar").attr('disabled', false);
	});
}

function loadError(error) {
	var messages = [];

	$.each(error, function() {
		messages.push($('<li>', {'text': this.msg}));
		$('#' + this.element).parent().addClass('form-warning');
	});

	var msg = $('<div>').append(
		$('<h4>', {'text': 'Não foi possível salvar a venda'}),
		$('<p>', {'text': 'Verifique os campos destacados abaixo'}),
		$('<ul>').append(messages)
	);

	$('#mensagem').addClass('alert-box alert-box-warning').html(msg.html()).show();
	$(window).scrollTop(0);
}

function mostrarAvisos(avisos, tipo, title)  {
	if (typeof avisos != 'object') {
		avisos = JSON.parse(avisos);
	}
	var msgs = avisos;
	avisos = $('<div>').append($('<ul>'));
	$.each(msgs, function(i, aviso) {
		var mensagem = (typeof aviso == 'string') ? aviso : aviso.msg;
		avisos.find('ul').append(
			$('<li>', {'text': mensagem})
		);
	});
	DialogMessage[tipo]({description: avisos.html(), htmlTitle: title});
}

function setListaPreco(idListaPreco) {
	var listFound = $('#idListaPreco option[value="' + idListaPreco + '"]').length

	if (!listFound) {
		$('#idListaPreco').append(
			$('<option>', {
				'value': -1,
				'text': 'Lista de preço indisponível/expirada',
				'selected': true
			})
		);
	} else {
		$('#idListaPreco').val(idListaPreco);
	}
}

function gerarComprovante(idVenda) {
	xajax_gerarComprovanteNaoFiscal(idVenda, function(response) {
		imprimirComprovanteNaoFiscal(response);
	});
}

function montarListasPrecos(data) {
	$('#idListaPreco').empty();

	if (!data['outras'].length) {
		$('#idListaPreco').append(
			$('<option>', {'value': '0', 'text': 'Nenhuma lista'})
		);
	} else {
		$('#idListaPreco').append(
			$('<option>', {'value': 0, 'text': 'Selecione uma lista'}),
			$.map(data['outras'], function(item) {
				return $('<option>', {'value': item.id, 'text': item.nome});
			})
		);
	}
}

function adicionarListasPrecos(data) {
	if (data['listasContato'] && data['listasContato'].length) {
		$('optgroup[label="Contato"]').remove();
		$('#idListaPreco').append(
			$('<optgroup>', {'label': 'Contato'}).append(
				$.map(data['listasContato'], function(item) {
					return $('<option>', {'value': item.id, 'text': item.nome});
				})
			)
		);
		$('#idListaPreco option[value="0"]').text('Selecione uma lista');
	}
}

function removeRelacaoListaContato() {
	if ($('#idListaPreco').find(':selected').closest('optgroup').attr('label') == 'Contato') {
		$('#idListaPreco').val('0');
		$('#idListaPreco').trigger('change');
	}
	$('optgroup[label="Contato"]').remove();
	$("#idListaPreco option[value='-1']").remove();
}

function autoCompleteProduto() {
	$('#produto').autocomplete({
		'source': function(request, response) {
			$.ajax({
				'type': 'POST',
				'dataType': 'json',
				'url': 'services/produtos.lookup.php?apenasVenda=S&idContato=' + $('#idContato').val() + '&term=' + encodeURIComponent($('#produto').val()),
				'success': function(data) {
					response(data);
					executeDebounceSaldoLookup(data, $('#idConfUnidadeNegocio').val(), atualizarHtmlSaldoLookup);
				}
			});
		},
		'select': function(event, ui) {
			setIdProdutojQuery(ui.item);
			testDuplicated();
		},
		'change': function(event, ui) {
			testCompleter($(this), $('#produtoId'), 'Produto não encontrado no sistema');
		},
		'fnRenderItemUi': UiAutocompleteItem.codeSaldo,
		'autoFocus': true,
		'delay': 500,
		'minLength': 2,
		'selectOnly': true
	}).tipsy({
		'gravity': $.fn.tipsy.autoWE
	});
}

function openModalOrdensProducao(idVenda) {
	displayWait('pleasewait', true, 'Carregando informações, aguarde...');
	xajax_getOrdensByIdVenda(idVenda, function(data) {
		montarListaOrdens(data);
		closeWait('pleasewait');
	});
}

function montarListaOrdens(ordensProducao) {
	var tableBody = $('<div>', {'class': 'table-body'});
	$.each(ordensProducao, function() {
		tableBody.append(
			$('<div>', {'class': 'table-row'}).append(
				$('<div>', {'class': 'table-cell'}).append($('<a>', {'target': '_blank', 'href': 'ordens.producao.php#edit/' + this.id, 'text': this.numero})),
				$('<div>', {'class': 'table-cell', 'text': this.nomeProduto}),
				$('<div>', {'class': 'table-cell', 'text': this.codigoProduto}),
				$('<div>', {'class': 'table-cell', 'text': nroBraDecimais(this.quantidade, $('#dec_qtde').val())}),
				$('<div>', {'class': 'table-cell', 'text': this.nomeSituacao})
			)
		);
	});

	createDialog({
		'content': $('<div>').append(
			$('<div>', {'id': 'tabela_estoque_reservado', 'class': 'wh100 table'}).append(
				$('<div>', {'class': 'table-heading'}).append(
					$('<div>', {'class': 'table-row'}).append(
						$('<div>', {'class': 'table-head wh15', 'text': 'Nº ordem'}),
						$('<div>', {'class': 'table-head wh45', 'text': 'Nome do produto'}),
						$('<div>', {'class': 'table-head wh15', 'text': 'Código'}),
						$('<div>', {'class': 'table-head wh10', 'text': 'Qtde.'}),
						$('<div>', {'class': 'table-head wh25', 'text': 'Situação'})
					)
				),
				tableBody
			)
		),
		'config': {
			'height': 350
		},
		'htmlTitle': 'Ordens de produção',
		'width': 640,
		'hideOk': true,
		'hideCancel': true
	});
}
