function MultiContatosRapidos(configurations) {
	configurations.width = '85%';
	UnicoContatoRapido.call(this, configurations);
	this.data = [];
}

MultiContatosRapidos.prototype = Object.create(UnicoContatoRapido.prototype);
MultiContatosRapidos.prototype.constructor = MultiContatosRapidos;
MultiContatosRapidos.prototype.montar = function() {
	UnicoContatoRapido.prototype.montar.call(this);
	this.config.input.attr('disabled', true);
};

MultiContatosRapidos.prototype.eventoAoDigitar = function(event){
	if(event.keyCode == 13 && !this.disabilitaEnter) {
		var classe = this;
		displayWait('pleasewait');
		xajax_buscarAutoCompletarContato(this.acompleteField.val(), function(data) {
			closeWait('pleasewait');
			if(data.length == 0) {
				return;
			}
			classe.tmpData = data;
			classe.adicionar();
			classe.acompleteField.autocomplete( "close" );
		});
		return;
	}
	this.warningVazio.validar();
};

MultiContatosRapidos.prototype.remove = function() {
	UnicoContatoRapido.prototype.remove.call(this);
	this.config.input.attr('disabled', false);
};

MultiContatosRapidos.prototype.warnings = function() {
	UnicoContatoRapido.prototype.warnings.call(this);
	classe = this;
	this.warningJaAdicionado = new warningIcon({
		acompleteField: this.acompleteField,
		idField: this.config.input,
			validacao : function (id)  {
				for (var i = 0 ; i < classe.data.length; i++) {
					if (classe.data[i].id == id) {
						return 'Este Contato jÃ¡ foi adicionado na lista';
					}
				}
				return true;
			},
			timerToClose: 5000
	});
};

MultiContatosRapidos.prototype.adicionar = function() {
	this.warningVazio.remover();
	if(!this.validar()) {
		return;
	}
	if (!this.dataArea) {
		this.createTable();
	}
	this.adicionarLinha(this.tmpData);
	this.data.push(this.tmpData);
	if(classe.config.afterChange !== undefined) {
		classe.config.afterChange(this.tmpData);
	}
	this.tmpData = null;
};

MultiContatosRapidos.prototype.createTable = function() {
	this.dataArea = $('<table>', { class: 'not-header contact-data itens-list'});
	this.dataArea.insertBefore(this.divArea);
}

MultiContatosRapidos.prototype.validar = function() {
	this.acompleteField.val('');
	if (
		this.tmpData == null || this.tmpData.id == 0 || !this.warningJaAdicionado.validar(this.tmpData.id) || !this.config.extraValidation(this.tmpData.id)
	) {
		this.tmpData = null;
		return false;
	}
	return true;
};

MultiContatosRapidos.prototype.limpar = function() {
	this.data = [];
	this.config.input.parent().find('.message-area div').hide();
	if (!this.dataArea) {
		return;
	}
	this.dataArea.html('');
};

MultiContatosRapidos.prototype.exibir = function(itens) {
	this.limpar();
	if (itens == undefined || !Array.isArray(itens) || itens.length == 0) {
		return;
	}
	this.data = itens;
	this.createTable();
	for (var idcItem = 0 ; idcItem < itens.length; idcItem++) {
		var item = itens[idcItem];
		this.adicionarLinha(item)
	}
};

MultiContatosRapidos.prototype.adicionarLinha = function(item) {
	var classe = this;
	var linkName = $('<a>', { href: this.config.editLink +'/'+item.id, target: '_blank', text: item.nome, class: 'action-link'});
	var divNomeContato = $('<td>', { 'data-id': item.id, class: 'contact-name'}).append(
		$('<input>', { type: 'hidden', name: this.config.input.attr("name"), value: item.id }),
		linkName,
		$('<i>', { class: 'icon-pencil form-icon', type: 'button' }).on('click',function() {
			formContatoRapido.abrirPopup({
				field: classe.config.acomplete,
				id: item.id,
				nome : item.nome,
				afterSave : function(id, name) {
					linkName.html(name);
					xajax_obterTiposContatos(id, function(data) {
						classe.adicionaPopoverTipoContato(data.tipos, divNomeContato);
					});
				}
			});
		})
	);
	var containerItem = $('<tr>', { 'data-id': item.id });
	this.dataArea.append(
		containerItem.append(
			divNomeContato,
			$('<td>', { class: 'hidde-ro contact-icons'}).html(
				$('<a>').append(
					$('<span>', { class: 'fas fa-trash-alt', type: 'button', style: 'cursor:pointer' })
				).on('click',function() {
					classe.excluir(containerItem);
				})
			)
		)
	);
	if(item.tipos === undefined) {
		xajax_obterTiposContatos(item.id, function(data) {
			classe.adicionaPopoverTipoContato(data.tipos, linkName);
		});
		return;
	}
	this.adicionaPopoverTipoContato(item.tipos, linkName);
};

MultiContatosRapidos.prototype.adicionaPopoverTipoContato = function(tipos, divNomeContato) {
	if (tipos == null) {
		return;
	}
	divNomeContato.attr('data-placement', 'right auto')
		.attr('data-toggle', 'popover')
		.attr('data-trigger', 'hover')
		.attr('data-html', true)
		.attr('data-container', 'body');
	var tiposTx = '';
	for(var i = 0; i < tipos.length; i++) {
		tiposTx += tipos[i].tipoContato + ", ";
	}
	divNomeContato.attr('data-content', '<p>' + tiposTx.slice(0, -2) + '</p>');
	divNomeContato.popover().on('show.bs.popover', function(e) {
		$(this).data('bs.popover').tip().addClass('popover-ajuda');
	});
};

MultiContatosRapidos.prototype.excluir = function(item) {
	var id = $(item).attr('data-id');
	for (var idcData = 0; idcData < this.data.length; idcData++) {
		var el = this.data[idcData];
		if(el.id == id) {
			this.data.splice(idcData, 1);
			break;
		}
	}
	$(item).remove();
};