var dialog = $('<div></div>');

function abrirPopupReceberComPix(data, tipoGeracao) {
	if ($('#pixwait').length == 0) {
		$("<div>", {id: "pixwait", class: "pleasewait"}).insertAfter($('.pleasewait').last());
	}

	displayWait('pixwait', true, 'Gerando recebimento por Pix, aguarde...');
	$.get('pix.gerar.qrcode.php?id=' + data.id + '&tipoGeracao=' + tipoGeracao, function(response, status) {
		closeWait('pixwait');
		if (status != 'success') {
			return exibirDialogoErro('A requisição não foi concluída corretamente. Verifique sua conexão.');
		}
		try {
			processarRetorno(JSON.parse(response), data, tipoGeracao);
		} catch(e) {
			return exibirDialogoErro('Não foi possível processar o retorno do servidor. Entre em contato com nosso suporte.');
		}
	}).fail(function() {
		return exibirDialogoErro('Houve um erro na requisição.');
	});
}

function processarRetorno(response, data, tipoGeracao) {
	if (response['error']) {
		var msgs = [];
		if (response['invalidDataFields']) {
			response['invalidDataFields'].forEach(function(msg) {
				msgs.push($('<li>', { text: msg }))
			})
		};

		return exibirDialogoErro(response['error'], msgs)
	} else {
		var dialog = {
			config: {
				width: (tipoGeracao == 1 ? '660px' : '560px')
			},
			content: $('#form_pix_generation'),
			textOk: 'Enviar cobrança pix',
			idOk: 'share_qrcode',
			textCancelar: 'Visualizar cobrança pix',
			idCancelar: 'show_qrcode',
			classStyle: 'ui-dialog-newest',
			fnCreate: function() {
				$('#form_pix_generation .pix-qrcode-base').remove();
				if (tipoGeracao == 1) {
					$('#form_pix_generation h2').text('Pix gerado com Sucesso!');
					response.forEach(function(qrcodeData) {
						$('#form_pix_generation .pix-form-qrcode').append(buildQRCodeBlock(qrcodeData));
					});
				} else {
					var total = 0;
					response.forEach(function(data) {
						total += parseFloat(data['valor']);
					});
					qrcodeData = response[0];
					qrcodeData['valor'] = total;
					$('#form_pix_generation h2').text('Cobranças Pix geradas com sucesso!');
					$('#form_pix_generation .pix-form-qrcode').append(buildOriginBlock(qrcodeData));
				}
			},
			fnOk: function() {
				abrirPopupCompartilharPix(data, tipoGeracao);
			},
			fnCancelar: function() {
				window.open('pix.gerar.qrcode.php?id=' + data.id + '&tipoGeracao=' + tipoGeracao + '&view=true', '_blank');
				return false;
			}
		};

		createDialog(dialog);

		return false;
	}
}

function abrirPopupCompartilharPix(data, tipoGeracao) {
	var dialog = {
		config: {
			width: '520px'
		},
		content: $('#form_pix_share'),
		hideOk: true,
		hideCancel: true,
		classStyle: 'ui-dialog-newest',
		fnCreate: function() {
			$('#button_email').off('click').on('click', function() {
				$('.ui-dialog-titlebar-close').trigger('click');
				abrirPopupEnvioDocumentoPix(data.id, data.idContato, tipoGeracao == 1 ? 'pix' : 'pix.origem');
			});
			$('#button_whatsapp').off('click').on('click', function() {
				$('#form_pix_share').dialog('close');
				abrirPopupEnvioWhatsapp(data, tipoGeracao == 1 ? 'pix' : 'pix.origem');
			});
		},
	};

	createDialog(dialog);

	return false;
}

function abrirPopupEnvioWhatsapp(data, tipo) {
	xajax_enviarDocumentoWhatsapp(data.id, data.idContato, tipo, data.emailEnviado, function(response) {
		if (response.error) {
			Toast.create({ 'type': Toast.W, 'msg': response.error });
		} else {
			whatsApp.create(response.celular, response.url);
		}
	});
}

function abrirPopupEnvioDocumentoPix(idConta, idContato, tipo) {
	dialog.dialog({
		autoOpen: false,
		title: 'Compartilhar documento por email',
		modal: true,
		resizable: false,
		close: function() {
			$(this).dialog('destroy');
		},
		width: getMobileWidthForDialogs(425),
	});
	dialog.load('templates/form.envio.documento.popup.php?idDoc=' + idConta + '&idContato=' + idContato + '&tipo=' + tipo, function() {
		dialog.dialog('open');
		ajustarFormEnvioDocPix();
	});
}

function ajustarFormEnvioDocPix() {
	var idDoc = $('#idDocEnvioDoc').val();
	var idContato = $('#idContatoEnvioDoc').val();
	var tipo = $('#tipoEnvioDoc').val();
	displayWait('pixwait', true, 'Ontendo dados para envio, aguarde...');
	xajax_obterDadosDoDestinatario(idDoc, idContato, tipo);
	$('#nomeDestinatario').focus();
}

function exibirDialogoErro($erro, msgs = '') {
	DialogMessage.warning({
		htmlTitle: 'Não foi possível gerar o recebimento com Pix',
		description: $erro,
		content: $('<div>').append($('<p>', { html: msgs }))
	});
}