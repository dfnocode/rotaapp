var Script = {
    loadedScripts: []
};

Script.include = function(arrScripts) {
    if (this.loadedScripts.length == 0) {
        var scripts = $('script');
        for (var i = 0 ; i < scripts.length; i++) {
            var url = $(scripts[i]).attr('src');
            if (!url) {
                continue;
            }
            url = url.replace(window.location.origin+'/', '').split('/');
            if (url[0] == 'bling' && url[1] == 'bling') {
                url[0] = '';
                url[1] = '';
            }
            if (url[0] == 'a' || url[0] == 'b') {
                url[0] = '';
            }
            var last = url[url.length-1].split('-');
            var final = last[last.length - 1].replace('.js','');
            if (!isNaN(parseFloat(final)) && isFinite(final)) {
                last[last.length - 1] = '';
            } else {
                last[last.length - 1] = final;
            }
            url[url.length-1] = arrayToString(last, '-') + '.js';
            url = arrayToString(url, '/');
            this.loadedScripts.push(url);
        }
    }
    for (var idcScript = 0; idcScript < arrScripts.length; idcScript++) {
        var script = arrScripts[idcScript];
        Script.load(script);
    }
};

function arrayToString(arr, $sep) {
    var str = '';
    for (var i = 0; i < arr.length; i++) {
        if (!arr[i]) {
            continue;
        }
        str += arr[i];
        str += $sep;
    }
    return str.substring(0,str.length - $sep.length);
  }

Script.load = function(nome) {
    if (this.loadedScripts.indexOf(nome) != -1) {
        return false;
    }
    var script = '';
    if (nome.split('.').pop().toLowerCase() == 'css') {
        script = document.createElement('style');
    } else {
        script = document.createElement('script');
        script.setAttribute('type', 'text/javascript');
    }
    var ref = this;
    $.ajax({
        url : nome,
        async: false,
        cache: false,
        success: function(code) {
            script.innerHTML = code;
            document.getElementsByTagName('html')[0]
                    .appendChild(script);
            ref.loadedScripts.push(nome);
        }
    });
};

LerConfiguracoes = function (padroes, configuracoes) {
    for (var configuracao in padroes) {
        if ( configuracoes == undefined ) {
            return padroes;
        }
        if (configuracoes[configuracao] == undefined) {
            continue;
        }
        if (Array.isArray(padroes[configuracao]) && padroes[configuracao].length > 0) {
            padroes[configuracao] = configuracoes[configuracao].concat(padroes[configuracao]);
            continue;
        }
        if (typeof padroes[configuracao] == 'object' && padroes[configuracao] != null && Object.keys(padroes[configuracao]).length > 0) {
            padroes[configuracao] = $.extend(padroes[configuracao], configuracoes[configuracao]);
            continue;
        }
        padroes[configuracao] = configuracoes[configuracao];
    }
};

camelize = function(text, separator) {
    if (typeof(separator) == "undefined") {
      separator = "-";
    }
    var words = text.split(separator);
    var result = "";
    for (var i = 0 ; i < words.length ; i++) {
      var word = words[i];
      var capitalizedWord = word;
      if (i > 0) {
        capitalizedWord = word.charAt(0).toUpperCase() + word.slice(1);
      }
      result += capitalizedWord;
    }
    return result;
};

 sanitize = function(text, separator) {
	if (separator == undefined) {
		separator = '-';
	}
	text = text.toLowerCase()
			   .replace(new RegExp('[ÁÀÂÃ]','gi'), 'a')
			   .replace(new RegExp('[ÉÈÊ]','gi'), 'e')
			   .replace(new RegExp('[ÍÌÎ]','gi'), 'i')
			   .replace(new RegExp('[ÓÒÔÕ]','gi'), 'o')
			   .replace(new RegExp('[ÚÙÛ]','gi'), 'u')
               .replace(new RegExp('[Ç]','gi'), 'c')
               .replace(new RegExp('[°ºª]','gi'), '')
               .replace(new RegExp('[.]', 'g'), separator);
    if (separator != ' ') {
        text = text.replace(new RegExp('[ ]', 'g'), separator);
    }
    return text;
};

suportSticky = function () {
    var prefixes =['','-webkit-','-moz-','-o-' ,'-ms-'];
	var prop = 'position:';
	var el = createElement('a');
    el.style.cssText = prop + prefixes.join('sticky' + ';' + prop).slice(0, -prop.length);
	if (el.style.position.indexOf('sticky') === -1) {
        return false;
    }
    return true;
};

var crazyIndex = function(t1, t2) {
    t2 = t2.replace(/(\r\n|\n|\r)/gm,'').replace(/<br \/>/g,'');
    for (var i = 0 ; i < t1.length ; i++) {
        if (t1[i] == '' || t1[i] != t2[0]) {
            continue;
        }
        var semelhanca = 0;
        var consecutivas = 0;
        var idcE = i;
        var incompatibilidade = 0;
        for (var j = 0; j < t2.length; j++) {
            if (t1[idcE] == t2[j]) {
                idcE++;
                consecutivas = 0;
                semelhanca++;
            } else {
                j--;
                incompatibilidade++;
                if (incompatibilidade == 2) {
                    incompatibilidade = 0;
                    idcE++;
                }
                consecutivas++;
                if (consecutivas == 20) {
                    semelhanca = 0;
                    break;
                }
            }
        }
        if (semelhanca / t2.length >= 0.8) {
            return i;
        }
    }
    return -1;
};